--[[

PROGRAM NAME:	DRUG WARS (SINGE EDITION)
AUTHOR:			RDG2010

This file is part of DRUG WARS (SINGE EDITION)

    DRUG WARS (SINGE EDITION) is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation.

    DRUG WARS (SINGE EDITION) is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

    Read COPYING.TXT for more info.


]]--


iSecs = 0
iLimit = 0
lastSeconds = 0
thisSeconds = 0

bGunMute = false
iMuteFrames = 0
MUTE_DELAY = 35

heartbeat = false
blinkSecs = 0
lastBlinkSecs = 0

iRevFrames = 0
REV_DELAY = 10
bReversePointer = false
revsetx = 0; revsety = 0

function singeRandomize()

	local k = 0
	for k=1,100 do
		math.randomseed(k * os.clock())
	end

end

function blinkTimer(thisMS)

	-- Function blinks every second.

	blinkSecs = os.clock()
	
	if bPause then
	
		lastBlinkSecs = blinkSecs
		
	else

		if (blinkSecs - lastBlinkSecs > thisMS) then
			heartbeat = not heartbeat
			lastBlinkSecs = blinkSecs

		end
		
	end	
	
end

function clockRnd()

	local j = 0
	local q = 0
	local w = 0	
	local r = 0
	local b1 = true

	j = os.clock()
	q, w = math.modf(j) 
	
	s2 = tostring(w)	
	r = string.find(s2,".")
	
	if (r == nil) then
	
		s2 = tostring(q)
		s2 = string.sub(s2,string.len(s2), string.len(s2))
	
	else
	
		s2 = string.sub(s2, r + 1)	
		r = string.len(s2)
		
		if r == 0 then
			
			s2 = tostring(q)
			s2 = string.sub(s2,string.len(s2), string.len(s2))
			
		
		elseif r == 2 then
			
			s2 = string.sub(s2, 2, 2)
		
		elseif r >= 3 then
			
			s2 = string.sub(s2, 3, 3)		
		
		end	
	
	end

	w = tonumber(s2)	
	return w

end

function timerOFF()

iSecs = 0
iLimit = 0
if (bDebug) then debugPrint ("Timer OFF") end

end

function timerON(thisLong)

	iSecs = 0
	iLimit = thisLong
	lastSeconds = os.clock()
	if (bDebug) then debugPrint ("Timer lock engaged! Waiting for " .. thisLong .. " Seconds") end

end

function timerDue()
	
	thisSeconds = os.clock()
	
	if bPause then
		
		lastSeconds = thisSeconds 
		
	else
		
		if (thisSeconds ~= lastSeconds) then		
			
			iSecs = iSecs + thisSeconds - lastSeconds
			lastSeconds = thisSeconds 		
			
			--if (bDebug) then debugPrint ("Timer count " .. iSecs) end

		end
		
		if (iSecs >= iLimit) then

			if (bDebug) then debugPrint ("Timer lock DISengaged. Timer expired.") end
			timerOFF()
			return true
			
		else		
			--if bDebug then debugPrint("Amount to wait: " .. iLimit .. " iSecs so far: " .. iSecs) end
			return false
		
		end	
	
	end

end

function muteSound()
	
	iMuteFrames = 0
	bGunMute = true

end

function blinkRev()

	iRevFrames = 0
	bReversePointer = true

end


function setupClip(thisA, thisB)

	iFrameStart = thisA
	iFrameEnd = thisB
	discSkipToFrame(thisA)
	discChangeSpeed(1,1)

end

function rpadString(str, len, char)

	if char == nil then char = ' ' end
	if type(str) == "number" then str = tostring(str) end
	return str .. string.rep(char, len - #str)
end

function lpadString(str, len, char)

	if char == nil then char = ' ' end
	if type(str) == "number" then str = tostring(str) end
	return string.rep(char, len - #str) .. str
end

