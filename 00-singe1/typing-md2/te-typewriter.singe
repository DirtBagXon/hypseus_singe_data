--[[

PROGRAM NAME:	MAD DOG 2 THE LOST GOLD (SINGE EDITION)
AUTHOR:			RDG2010

This file is part of MAD DOG 2 THE LOST GOLD (TYPING EDITION)

    MAD DOG 2 THE LOST GOLD (SINGE EDITION) is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation.

    MAD DOG 2 THE LOST GOLD (SINGE EDITION) is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

    Read COPYING.TXT for more info.


]]--

function getLetter()

	return string.char(rndegg:value(SWITCH_A, SWITCH_Z))

end

function calcScore(thisWord, badKeys, thisLong)

	local s = string.len(thisWord) * 25
	local q = 0
	local w = 0
	local r = 0
	
	q = s * 0.5
	
	if badKeys > 10 then 
		w = 0
		
	else
	
		w = q - q * (badKeys/100)
	
	end
	
	if thisLong > iDelay then thisLonge = iDelay end
	
	r = q - q * (thisLong/iDelay)
	

	if lvlState == lvlRunning then -- extra points for typing the word before pausing the video
	
		s = s + (s * 0.25)
		playMe(sndBonus01)
	
	end
	
	if bDebug then debugPrint("Bonus awarded: " .. math.modf((s + w + r))) end
	iScore = iScore + math.modf((s + w + r))


end

function showPlayerWord(thisWord, posy, sbadchar, bCenter)

	local q = WORD_SHORT
	local k = 1
	local w = 0
	local xx = 0	
	local sWord = ""
	
	if bMagicWord then
	
		sWord = sMagicWord
		
		if splayerword ~= "" then
		
			xx = formatWord(thisWord)
			
		else
		
			xx = (overlayGetWidth() * 0.5)
			
		end
		
	else
	
		sWord = move[currentMove][wordval]
		xx = move[currentMove][wordx]
		
	end		

	if bCenter then
	
		xx = overlayGetWidth() * 0.5
	
	end
	
	if thisWord ~= "" then 		
		
		if string.len(sWord) >= 13 then
		
			fontSelect(fontDebug6pt)
			q = WORD_LONG
			
		else
		
			fontSelect(fontDebug8pt)
		end
		
		w = string.len(thisWord)
		for k=1,w do
			
			setFontColor(GREEN)			
			s1 = string.sub(thisWord,k,k) 
			fontPrint(xx + q*(k-1), posy, s1)	
		
		end
		
		
		
	end
	
	blinkTimer(0.15)
	
	if heartbeat then	
		
		if sbadchar ~= "" then			
		
			setFontColor(RED)
			fontPrint(xx + q*w, posy, sbadchar)	
		
		else	
		
			setFontColor(GREEN)
			fontPrint(xx + q*w, posy, "@")	
			
		end
		
	end
	

end

function drawWord(thisx, thisy, thisFont, thisColor, thisWord)
	
	local sprw = nil
	local xx = thisx
	local yy = thisy
	
	setFontColor(thisColor)
	fontSelect(thisFont)
	sprw = fontToSprite(thisWord)
	xx = xx - spriteGetWidth(sprw) * 0.5
	yy = yy - spriteGetHeight(sprw) * 0.5
	spriteDraw(xx, yy, sprw)

end

function showWord(thisWord, posy)

	local q = WORD_SHORT
	local k = 1
	local w = 0
	local s1 = ""
	local s2 = ""
	
	if bMagicWord then
	
		setFontColor(GREY)
		fontSelect(fontDebug6pt)
		
		fontPrint(119, posy, "THE SECRET WORD IS:")
	
	elseif thisWord ~= "" then 		
	
		w = string.len(thisWord)
		
		if w >= 13 then
		
			fontSelect(fontDebug6pt)
			q = WORD_LONG
			
		else
		
			fontSelect(fontDebug8pt)
		end
		for k=1,w do
		
			if k >= iKeyIndex or iKeyIndex == 1 then
		
				s2 = string.sub(thisWord,k,k) 
				
				if (move[currentMove][moveType] == GOODGUY) then
				
					setFontColor(RED)
				else
					setFontColor(GREY)
				end
				fontPrint(move[currentMove][wordx] + q*(k-1), posy, s2)	
			
			else
			
				s1 = string.sub(thisWord,k,k) 
				
				if (move[currentMove][moveType] == GOODGUY) then
				
					setFontColor(RED)
				else
					colorForeground(rndegg:value(75,255),rndegg:value(75,255),rndegg:value(75,255))				
				end
				fontPrint(move[currentMove][wordx] + q*(k-1), posy, s1)	
				
			end
		
		end	
		
		
	end

	
end

function showBonus()

	local q = 16
	local k = 1
	local w = 0
	local s1 = ""
	local s2 = ""
	
	if thisWord ~= "" then 			
	
		spriteDraw(move[currentMove][wordx], move[currentMove][wordy], sprPanel2)
		blinkTimer(0.15)
	
		if heartbeat then
			fontSelect(fontDebug8pt)
			setFontColor(ORANGE)
			fontPrint(move[currentMove][wordx]+3, move[currentMove][wordy]+4, move[currentMove][wordval])
			
		end
		
	end

	
end

function validKey()

	local b1 = false

	if (iKey >= SWITCH_A and iKey <= SWITCH_Z) then 

		b1 = true
		
	elseif (iKey >= SWITCH_0 and iKey <= SWITCH_9) then 

		b1 = true

	elseif (iKey == SWITCH_SPACE or iKey == SWITCH_COLON or iKey == SWITCH_EXCLAIM or iKey == SWITCH_QUESTION or iKey == SWITCH_COMMA or iKey == SWITCH_QUOTE or iKey == SWITCH_MINUS) then
		
		b1 = true

	end

	return b1
	
end

function sprinkleSearch(thiskey, imax)

	local k = 0
	local result = false
	local xx = 0
	local yy = 0
	local s1 = string.lower(string.char(thiskey))
	
	for k=1,imax do		
	
		if sprinkles[k][3] == s1 and sprinkles[k][4] == true then
		
			result = true
			sprinkles[k][4] = false
			break
		
		end
	
	end
	
	return result

end

function sprinkleCount(imax)

	local k = 0
	local j = 0
	
	for k=1,imax do
	
		if sprinkles[k][4] == false then j = j + 1 end
	
	end
	
	return j

end

function showTrainWord(thisFrame, thisWord)
	
	local k = 0
	local f1 = 0	
	local x1 = 0
	local x2 = 0
	local y1 = 0
	local y2 = 0
	local bFound = false
	local bResult = false

	for k=1,hitmapTotal do

		if (hitmap[k][hitmapFrame] == thisFrame) then	
		
			f1 = hitmap[k][hitmapIndex]
			
			if (f1 ~= 0) then
			
				bFound = true					
				
			end
			break
		end	

	end
	
	if bFound then
	
		x1 = hitbox[f1][bbx1]
		y1 = hitbox[f1][bby1] - 5			
		
		spriteDraw(x1, y1, sprPanel4)		
		fontSelect(fontDebug16pt)
		if (move[currentMove][moveType] == GOODGUY) then
			setFontColor(RED)
		else
			setFontColor(GREEN)
		end
		fontPrint(x1+3, y1+3, string.upper(thisWord))
		
	end
	
end

function showPlayerPhrase(thisWord, posy, sbadchar, bCenter)

	local q = WORD_SHORT
	local k = 1
	local w = 0
	local xx = 0	
	local sWord = ""
	
	sWord = move[currentMove][wordval]
	xx = move[currentMove][wordx]
	
	if thisWord ~= "" then 				
		
		q = getSpacing(sWord)
		w = string.len(thisWord)
		for k=1,w do
			
			setFontColor(GREEN)			
			s1 = string.sub(thisWord,k,k) 
			fontPrint(xx + q*(k-1), posy, s1)	
		
		end
	end
	
	blinkTimer(0.15)
	
	if heartbeat then	
		
		if sbadchar ~= "" then			
		
			setFontColor(RED)
			fontPrint(xx + q*w, posy, sbadchar)	
		
		else	
		
			setFontColor(GREEN)
			fontPrint(xx + q*w, posy, "@")	
			
		end
		
	end	

end

function showPhrase(thisWord, posy)

	local q = WORD_SHORT
	local k = 1
	local w = 0
	local s1 = ""
	local s2 = ""
	
	if thisWord ~= "" then 		
	
		
		w = string.len(thisWord)				
		q = getSpacing(thisWord)	
		
		for k=1,w do
		
			if k >= iKeyIndex or iKeyIndex == 1 then
		
				s2 = string.sub(thisWord,k,k) 
				
				if (move[currentMove][moveType] == GOODGUY) then
				
					setFontColor(RED)
				else
					setFontColor(GREY)
				end
				fontPrint(move[currentMove][wordx] + q*(k-1), posy, s2)	
			
			else
			
				s1 = string.sub(thisWord,k,k) 
				
				if (move[currentMove][moveType] == GOODGUY) then
				
					setFontColor(RED)
				else
					colorForeground(rndegg:value(75,255),rndegg:value(75,255),rndegg:value(75,255))				
				end
				fontPrint(move[currentMove][wordx] + q*(k-1), posy, s1)	
				
			end
		
		end	
		
		
	end

	
end

function showSprinkles()

	local k = 0	
	
	for k=1,iSprinkleMax do
	
		if sprinkles[k][4] == true then
		
			spriteDraw(sprinkles[k][1], sprinkles[k][2], sprPanel2)			
			fontSelect(fontDebug8pt)
			colorForeground(sprinkles[k][5],sprinkles[k][6],sprinkles[k][7])
			fontPrint(sprinkles[k][1]+3, sprinkles[k][2]+4, sprinkles[k][3])
		
		end
		
	end
	
	spriteDraw(75, 200, sprPanel)
	spriteDraw(108, iWordYY1+5, sprCTL )

end
