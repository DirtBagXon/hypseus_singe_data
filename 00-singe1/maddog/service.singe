--[[

PROGRAM NAME:	MAD DOG MCCREE (SINGE EDITION)
AUTHOR:			RDG2010

This file is part of MAD DOG MCCREE (SINGE EDITION)

    MAD DOG MCCREE (SINGE EDITION) is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation.

    MAD DOG MCCREE (SINGE EDITION) is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

    Read COPYING.TXT for more info.


]]--


sprLine1 = nil
sprLine2 = nil
sprLine3 = nil
qx = {}
qy = {}
highscore = nil


function readConfig()

	-- This function reads the data file and loads the values into
	-- the appropriated dip variables.


	local s1
	local hsName = ""
	local hdScore = ""
	local k = 0
	local h1 = io.input("singe/maddog/maddog.cfg")	

	if (bDebug) then debugPrint ("Entering readConfig()") end

		local s1 = io.read("*line")
		
		if (s1 ~= nil) then

			dip_CoinsPerCredit = tonumber(string.sub(s1,string.find(s1,"=")+1))
			
		end
		
		s1 = io.read("*line")
		
		if (s1 ~= nil) then

			dip_CoinsPerContinue = tonumber(string.sub(s1,string.find(s1,"=")+1))
			
		end
		
		s1 = io.read("*line")
		
		if (s1 ~= nil) then
		
			dip_LivesPerCredit = tonumber(string.sub(s1,string.find(s1,"=")+1))
			
		end
		
		s1 = io.read("*line")
		
		if (s1 ~= nil) then

			dip_Difficulty = tonumber(string.sub(s1,string.find(s1,"=")+1))
			
		end
		
		s1 = io.read("*line")
		
		if (s1 ~= nil) then

			dip_ReloadTrigger = tonumber(string.sub(s1,string.find(s1,"=")+1))
			
		end
		
		s1 = io.read("*line")
		
		if (s1 ~= nil) then

			dip_Crosshair = tonumber(string.sub(s1,string.find(s1,"=")+1))
			
		end
		
		s1 = io.read("*line")
		s1 = tonumber(string.sub(s1,string.find(s1,"=")+1))	
		
		if (s1 ~= nil) then
		
			if (s1 == 1) then
				dip_Undertaker = true
			else
				dip_Undertaker = false
			end
		end
		
		s1 = io.read("*line")
		s1 = tonumber(string.sub(s1,string.find(s1,"=")+1))	
		
		if (s1 ~= nil) then

			if (s1 == 1) then
				dip_Showdown = true
			else
				dip_Showdown = false
			end
		end
		
		s1 = io.read("*line")
		highscore = nil; highscore = {}
		for k=1,6 do
			s1 = io.read("*line")
			
			hsName = string.sub(s1,1,string.find(s1,",")-1)
			hsScore = string.sub(s1,string.find(s1,",")+1, string.len(s1))
			
			highscore[k] = {}
			highscore[k] = {hsName, hsScore}
		
		end
		
		io.close(h1)
		
		if (bDebug) then debugPrint ("Leaving readConfig()") end

end

function writeConfig()

	-- This function writes the values of the dip variables
	-- into an external data file.

	local sNewLine = "\n"
	local s1 = ""

	local h1 = io.output("singe/maddog/maddog.cfg")
	io.write("dip_CoinsPerCredit = " .. dip_CoinsPerCredit .. sNewLine)
	io.write("dip_CoinsPerContinue = " .. dip_CoinsPerContinue .. sNewLine)
	io.write("dip_LivesPerCredit = " .. dip_LivesPerCredit .. sNewLine)
	io.write("dip_Difficulty = " .. dip_Difficulty .. sNewLine)	
	io.write("dip_ReloadTrigger = " .. dip_ReloadTrigger .. sNewLine) 
	io.write("dip_Crosshair = " .. dip_Crosshair .. sNewLine)
	
	if (dip_Undertaker == true) then
		io.write("dip_Undertaker = 1" .. sNewLine)
	else
		io.write("dip_Undertaker = 0" .. sNewLine)
	end	
	
	if (dip_Showdown == true) then
		io.write("dip_Showdown = 1" .. sNewLine)
	else
		io.write("dip_Showdown = 0" .. sNewLine)
	end
	
	io.write(sNewLine)
	
	for k=1,6 do
		
		
		s1 = highscore[k][1] .. "," .. highscore[k][2]
		io.write(s1 .. sNewLine)
	
	end
	
	io.close(h1)

end

function updateOpts(thisIndex)


	if (thisIndex == 1) then
	
		dip_CoinsPerCredit = dip_CoinsPerCredit + 1
		
		if (dip_CoinsPerCredit > 4) then
		
			dip_CoinsPerCredit = 1
		
		end

	elseif (thisIndex == 2) then
	
		dip_CoinsPerContinue = dip_CoinsPerContinue + 1
		
		if (dip_CoinsPerContinue > 4) then
		
			dip_CoinsPerContinue = 1
		
		end

	elseif (thisIndex == 3) then
	
		dip_LivesPerCredit = dip_LivesPerCredit + 1
	
		if (dip_LivesPerCredit > 6) then
		
			dip_LivesPerCredit = 3
			
		end
		

	elseif (thisIndex == 4) then
	
		if (dip_Difficulty == DOPT_EASY) then
		
			dip_Difficulty = DOPT_MEDIUM
		
		elseif (dip_Difficulty == DOPT_MEDIUM) then
		
			dip_Difficulty = DOPT_HARD
		
		else	
		
			dip_Difficulty = DOPT_EASY
		
		end

	elseif (thisIndex == 5) then
	
		if (dip_ReloadTrigger == DOPT_IMMEDIATE) then
		
			dip_ReloadTrigger = DOPT_ONEMPTY
		
		elseif (dip_ReloadTrigger == DOPT_ONEMPTY) then
		
			dip_ReloadTrigger = DOPT_BORDERS
		
		else	
		
			dip_ReloadTrigger = DOPT_IMMEDIATE
		
		end
	
	elseif (thisIndex == 6) then
	
		dip_Undertaker = not dip_Undertaker
		
	elseif (thisIndex == 7) then	
		
		dip_Showdown = not dip_Showdown
		
	elseif (thisIndex == 8) then
	
		if (dip_Crosshair == 1) then
		
			dip_Crosshair = 2
			
		elseif (dip_Crosshair == 2) then
		
			dip_Crosshair = 3
			
		elseif (dip_Crosshair == 3) then
		
			dip_Crosshair = 4
			
		elseif (dip_Crosshair == 4) then
		
			dip_Crosshair = 5
			
		elseif (dip_Crosshair == 5) then
		
			dip_Crosshair = 1
			
		end
		
	elseif (thisIndex == 9) then
		
		lvlState = lvlEnd
		
	end

end

function printOpts()

	-- This function writes the options on the service menu screen.
	local k = 0
	
	for k=1,9 do
	
		if (k == 1) then

			if (dip_CoinsPerCredit == 1) then
			
				spriteDraw(237, 68, spr01)
				
			elseif (dip_CoinsPerCredit == 2) then
			
				spriteDraw(237, 68, spr02)
				
			elseif (dip_CoinsPerCredit == 3) then
			
				spriteDraw(237, 68, spr03)
				
			elseif (dip_CoinsPerCredit == 4) then
			
				spriteDraw(237, 68, spr04)
			
			end

		elseif (k == 2) then
		
			if (dip_CoinsPerContinue == 1) then
			
				spriteDraw(237, 84, spr01)
				
			elseif (dip_CoinsPerContinue == 2) then
			
				spriteDraw(237, 84, spr02)
				
			elseif (dip_CoinsPerContinue == 3) then
			
				spriteDraw(237, 84, spr03)
				
			elseif (dip_CoinsPerContinue == 4) then
			
				spriteDraw(237, 84, spr04)
			
			end
	
		elseif (k == 3) then
	
			if (dip_LivesPerCredit == 3) then
			
				spriteDraw(237, 101, spr01)
				
			elseif (dip_LivesPerCredit == 4) then
			
				spriteDraw(237, 101, spr02)
				
			elseif (dip_LivesPerCredit == 5) then
			
				spriteDraw(237, 101, spr03)
			
			else
			
				spriteDraw(237, 101, spr04)
				
			end
	
		elseif (k == 4) then
	
			if (dip_Difficulty == DOPT_EASY) then
			
				spriteDraw(236, 118, sprEasy)
			
			elseif (dip_Difficulty == DOPT_MEDIUM) then
			
				spriteDraw(236, 118, sprMed)
			
			else	
			
				spriteDraw(236, 118, sprHard)
			
			end
	
		elseif (k == 5) then
		
			if (dip_ReloadTrigger == DOPT_IMMEDIATE) then
		
				spriteDraw(208, 135, sprRel1)
			
			elseif (dip_ReloadTrigger == DOPT_ONEMPTY) then
			
				spriteDraw(208, 135, sprRel2)
			
			else	
			
				spriteDraw(208, 135, sprRel3)
			
			end		
			
	
		elseif (k == 6) then
		
			if dip_Undertaker then			
			
				spriteDraw(234, 151, sprYes)
				
			
			else
			
				spriteDraw(234, 151, sprNo)
				
			
			end
		
		elseif (k == 7) then
		
			
			if dip_Showdown then
			
				spriteDraw(234, 168, sprYes)
				
			
			else
			
				spriteDraw(234, 168, sprNo)
				
			
			end
			
		elseif (k == 8) then
	
			sprCursor = nil
			if (dip_Crosshair == 1) then
	
				sprCursor  = spriteLoad("singe/maddog/crosshaira.png")
				cursoroffsetx = 3; cursoroffsety = 3
				
			elseif (dip_Crosshair == 2) then
			
				sprCursor  = spriteLoad("singe/maddog/crosshairb.png")
				cursoroffsetx = 6; cursoroffsety = 6
				
			elseif (dip_Crosshair == 3) then
			
				sprCursor  = spriteLoad("singe/maddog/crosshairc.png")
				cursoroffsetx = 0; cursoroffsety = 0
				
			elseif (dip_Crosshair == 4) then
			
				sprCursor  = spriteLoad("singe/maddog/crosshaird.png")
				cursoroffsetx = 11; cursoroffsety = 12
				
			elseif (dip_Crosshair == 5) then
			
				--sprCursor  = spriteLoad("singe/maddog/crosshaire.png")
				fontSelect(fontDebug)
				colorForeground(0, 255, 0)
				fontPrint(234, 189, "TRIGGER")
				fontPrint(234-7, 197, "ACTIVATED")	
				cursoroffsetx = 0; cursoroffsety = 0
				
			end
			
			spriteDraw(234, 189, sprCursor)
				
		end

	end

end

function doServiceMenu()

	-- This is the main function for the service menu screen.

	-- local j = overlayGetWidth() * 0.5
	local j = 340 * 0.5
	local h = j - 80
	local k = 80
	
	if (lvlState == lvlSetup) then
	
		if (bDebug) then debugPrint ("Entering doServiceMenu()") end

		discSearch(logoService)
		discPause()		
		waitFor(0,false,true)
		
		optSel = 1
		readConfig()
		bGunMute = true
		bReloadDisabled = true
		bShowMouse = false
		bShowCredits = false
		bMakeNoise = true
		lvlState = lvlRunning
	
	elseif (lvlState == lvlRunning) then
	
		if (p1BUTTON3) then
		
			p1BUTTON3 = false
			playMe(sndCoin)
			updateOpts(optSel)	
			
		elseif p1BUTTON1 then
		
			p1BUTTON1 = false	
			lvlState = lvlEnd		
			soundPlay(sndCoin)
			
		else
			
			if (mousey >= 67 and mousey <= 84) then		-- Coins per credit
			
				spriteDraw(72, 71, sprArrow)
				optSel = 1
			
			elseif  (mousey >= 85 and mousey <= 100) then	-- Coins per continue
			
				spriteDraw(72, 88, sprArrow)
				optSel = 2			
			
			elseif  (mousey >= 101 and mousey <= 117) then	-- Lives per credit
			
				spriteDraw(72, 105, sprArrow)
				optSel = 3
			
			elseif  (mousey >= 118 and mousey <= 134) then	-- Difficulty
			
				spriteDraw(72, 122, sprArrow)
				optSel = 4
			
			elseif (mousey >= 135 and mousey <= 151) then	-- reload mode
			
				spriteDraw(72, 139, sprArrow)
				optSel = 5
			
			elseif (mousey >= 152 and mousey <= 165) then -- show undertaker
			
				spriteDraw(72, 156, sprArrow)
				optSel = 6
			
			elseif  (mousey >= 166 and mousey <= 182) then -- play showdowns
			
				spriteDraw(72, 172, sprArrow)			
				optSel = 7
			
			elseif  (mousey >= 183 and mousey <= 207) then -- Crosshair
			
				spriteDraw(72, 189, sprArrow)
				optSel = 8
			
			elseif  (mousey >= 208 and mousey <= 239) then -- exit
			
				spriteDraw(131, 214, sprArrow)
				optSel = 9
			
			end		
			printOpts()
			
			
		end
	
	elseif (lvlState == lvlEnd) then
	
		if (bDebug) then debugPrint ("Leaving doServiceMenu()") end	
		writeConfig()
		bShowMouse = true
		bGunMute = false
		currentState = stateStartup

	end

end
